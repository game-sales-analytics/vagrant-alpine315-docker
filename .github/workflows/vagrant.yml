name: Build And Publish Vagrant Box
on:
  schedule:
    - cron: "27 */6 * * *"
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  main:
    timeout-minutes: 90
    runs-on: macos-10.15
    concurrency:
      cancel-in-progress: false
      group: ${{ format('{0}-{1}', github.event_name, github.ref_name) }}
    steps:
      - name: Install Tools
        run: brew install coreutils
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Meta
        id: meta
        run: |
          BUILD_DATE_TIME=$(gdate --iso-8601=seconds)
          echo ::set-output name=build_date_time::$BUILD_DATE_TIME
          VERSION=$(gdate --date="$BUILD_DATE_TIME" '+%Y%m%d.%-H.%-M')
          TAG_NAME=$(printf 'v%s' $VERSION)
          echo ::set-output name=version::$VERSION
          echo ::set-output name=tag_name::$TAG_NAME
          BUILD_AT=$(gdate --date="$BUILD_DATE_TIME" --rfc-3339=seconds)

          BOX_DESCRIPTION=$(cat << EOF
          Automated build at $BUILD_AT

          Project is hosted on GitHub at: <https://github.com/game-sales-analytics/vagrant-alpine315-docker/>
          EOF
          )
          echo "box_description<<EOF" >> $GITHUB_ENV
          echo "$BOX_DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Create Tag
        run: |
          git tag -sa ${{ steps.meta.outputs.tag_name }} -m ${{ steps.meta.outputs.tag_name }}
          git push --follow-tags
      - name: Install VirtualBox
        run: |
          curl https://download.virtualbox.org/virtualbox/6.1.30/VirtualBox-6.1.30-148432-OSX.dmg --output vb.dmg
          sudo hdiutil attach vb.dmg
          sudo installer -package /Volumes/VirtualBox/VirtualBox.pkg -target /
          sudo hdiutil detach /Volumes/VirtualBox
          VBoxManage --version
      - name: Install Vagrant
        run: |
          brew install vagrant
      - name: Install Packer
        run: |
          brew tap hashicorp/tap
          brew install hashicorp/tap/packer
      - name: Delete Any Existing Versions
        run: |
          curl --header 'Authorization: Bearer ${{ secrets.VAGRANT_CLOUD_TOKEN }}' --request DELETE https://app.vagrantup.com/api/v1/box/xeptore/alpine315-docker/version/${{ steps.meta.outputs.version }}
      - name: Validate Packer Docker Box Template
        run: packer validate -var 'output_box_name=alpine315-docker.box' -var 'box_tag=xeptore/alpine315-docker' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl
      - name: Validate Packer Sentry Box Template
        run: packer validate -var 'output_box_name=alpine315-sentry.box' -var 'box_tag=xeptore/alpine315-sentry' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl
      - name: Build Docker Vagrant Box
        run: |
          # Retry 5 times before the steps actually fails
          (echo "===== Packer build: 1 ====" && packer build -force -var 'output_box_name=alpine315-docker.box' -var 'disk_size_mb=10000' -var 'box_tag=xeptore/alpine315-docker' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 2 ====" && packer build -force -var 'output_box_name=alpine315-docker.box' -var 'disk_size_mb=10000' -var 'box_tag=xeptore/alpine315-docker' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 3 ====" && packer build -force -var 'output_box_name=alpine315-docker.box' -var 'disk_size_mb=10000' -var 'box_tag=xeptore/alpine315-docker' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 4 ====" && packer build -force -var 'output_box_name=alpine315-docker.box' -var 'disk_size_mb=10000' -var 'box_tag=xeptore/alpine315-docker' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 5 ====" && packer build -force -var 'output_box_name=alpine315-docker.box' -var 'disk_size_mb=10000' -var 'box_tag=xeptore/alpine315-docker' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "==== Packer build Failed ====" && exit 1)
      - name: Build Sentry Vagrant Box
        run: |
          # Retry 5 times before the steps actually fails
          (echo "===== Packer build: 1 ====" && packer build -force -var 'output_box_name=alpine315-sentry.box' -var 'disk_size_mb=25000' -var 'box_tag=xeptore/alpine315-sentry' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 2 ====" && packer build -force -var 'output_box_name=alpine315-sentry.box' -var 'disk_size_mb=25000' -var 'box_tag=xeptore/alpine315-sentry' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 3 ====" && packer build -force -var 'output_box_name=alpine315-sentry.box' -var 'disk_size_mb=25000' -var 'box_tag=xeptore/alpine315-sentry' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 4 ====" && packer build -force -var 'output_box_name=alpine315-sentry.box' -var 'disk_size_mb=25000' -var 'box_tag=xeptore/alpine315-sentry' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "===== Packer build: 5 ====" && packer build -force -var 'output_box_name=alpine315-sentry.box' -var 'disk_size_mb=25000' -var 'box_tag=xeptore/alpine315-sentry' -var 'version=${{ steps.meta.outputs.version }}' -var 'version_description=${{ env.box_description }}' -var 'cloud_token=${{ secrets.VAGRANT_CLOUD_TOKEN }}' alpine.pkr.hcl) || \
          (echo "==== Packer build Failed ====" && exit 1)
      - name: Generate Release Note
        run: |
          echo '# Release `${{ steps.meta.outputs.version }}`' > release.md
          echo '' >> release.md

          cat release.md
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            alpine315-docker.box
            alpine315-sentry.box
            license.txt
            build-alpine315-docker.box.checksum
            build-alpine315-sentry.box.checksum
          prerelease: false
          draft: false
          body_path: release.md
          name: ${{ steps.meta.outputs.tag_name }}
          tag_name: ${{ steps.meta.outputs.tag_name }}
